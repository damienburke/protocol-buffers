/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import com.damo.proto.Account
import org.example.extensions.readFromDisk
import org.example.extensions.fileNameSuffix
import org.example.extensions.writeToDisk
import java.io.File
import java.io.FileOutputStream
import java.nio.file.Files
import java.nio.file.Path
import java.nio.file.Paths
import java.util.*
import kotlin.test.AfterTest
import kotlin.test.BeforeTest
import kotlin.test.Test
import kotlin.test.assertEquals

class ProtoTest {

    private val resultsDir = Paths.get("build/grpc_results")

    @Test
    fun `write and read`() {

        val accountId = 123L
        val accountName = UUID.randomUUID().toString()
        val account = Account.newBuilder()
            .setId(accountId)
            .setName(accountName)
            .setIsVerified(true)
            .build()

        val accountBinFile = Files.createFile(resultsDir.resolve("account.bin.".fileNameSuffix())).toFile()

        accountBinFile.absolutePath.writeToDisk(account)

        /**
         *
         */
        val savedAccount =
            accountBinFile.absolutePath.readFromDisk()
                .getOrThrow()

        assertEquals(account.id, savedAccount.id)
        assertEquals(accountId, savedAccount.id)
        assertEquals(accountName, savedAccount.name)
    }

    @BeforeTest
    fun setup() {
        Files.createDirectories(resultsDir)
    }

    @AfterTest
    fun teardown() {

        Files.walk(resultsDir).use { paths ->
            paths.sorted(Comparator.reverseOrder()).map { obj: Path -> obj.toFile() }
                .forEach(File::delete)
        }
    }
}
